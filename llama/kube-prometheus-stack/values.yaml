kube-prometheus-stack:
    fullnameOverride: "kps"

    defaultRules:
      rules:
        etcd: false
        kubeScheduler: false

    alertmanager:
      ingress:
        enabled: true
        annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.tls: "true"
            traefik.ingress.kubernetes.io/router.middlewares: "traefik-local-ipwhitelist@kubernetescrd"
        paths:
            - /
      alertmanagerSpec:
        image:
          repository: quay.io/prometheus/alertmanager
          tag: v0.24.0

    grafana:
        fullnameOverride: grafana
        adminPassword: prom-operator # change me?
        ingress:
          enabled: true
          annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.tls: "true"
              traefik.ingress.kubernetes.io/router.middlewares: "traefik-local-ipwhitelist@kubernetescrd"
          path: /
        persistence:
          type: pvc
          enabled: true
          storageClassName: nfs-client
          accessModes:
            - ReadWriteOnce
          size: 10Gi
          # annotations: {}
          finalizers: []
          # subPath: ""
          # existingClaim:

    prometheus-node-exporter:
        fullnameOverride: node-exporter

    prometheus:
        ingress:
          enabled: true
          annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.tls: "true"
              traefik.ingress.kubernetes.io/router.middlewares: "traefik-local-ipwhitelist@kubernetescrd"
          paths:
              - /
        prometheusSpec:
            image:
              repository: quay.io/prometheus/prometheus
              tag: v2.40.2
            ruleSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: nfs-client
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 50Gi
                    #selector: {}

    kubelet:
      enabled: true
      namespace: llama

    prometheusOperator:
        kubeletService:
          namespace: llama
        image:
          repository: quay.io/prometheus-operator/prometheus-operator
          tag: v0.61.0
        prometheusConfigReloaderImage:
          repository: quay.io/prometheus-operator/prometheus-config-reloader
          tag: v0.69.1

    kube-state-metrics:
        fullnameOverride: kube-state-metrics

    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeControllerManager:
      enabled: false
templates:
    prometheusRules: []
